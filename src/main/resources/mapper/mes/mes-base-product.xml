<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mes.base.product">

    <select id="prodList" parameterType="VMap" resultType="RowMap">
        SELECT FACT_CD
               ,PROD_CD
               ,PROD_PN
               ,PROD_NM
               ,PROD_KIND
               ,(SELECT CODE_NM
                 FROM DFT_CODE_INFO
                 WHERE CODE_ID = 'PROD_KIND'
                   AND CODE_CD = PROD_KIND
                ) PROD_KIND_NM
               ,PROD_GROUP
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_GROUP
                ) PROD_GROUP_NM
               ,PROD_FAMILY
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_FAMILY
                ) PROD_FAMILY_NM
               ,PROD_STAND
               ,PROD_UNIT
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_UNIT
                ) PROD_UNIT_NM
               ,PROD_PRICE
               ,PROD_MAIN_COMP
               ,(SELECT COMP_NM
                  FROM MES_COMPANY_INFO
                  WHERE COMP_CD = PROD_MAIN_COMP
                ) PROD_MAIN_COMP_NM
               ,(SELECT COUNT(*)
                  FROM MES_PRODUCT_PROCESS
                 WHERE FACT_CD = MPI.FACT_CD
                   AND PROD_CD = MPI.PROD_CD) AS PROC_CNT
               ,(SELECT COUNT(*)
                   FROM MES_PRODUCT_BOM
                  WHERE FACT_CD = MPI.FACT_CD
                    AND PROD_CD = MPI.PROD_CD) AS BOM_CNT
               ,PROD_KEEP_CNT
               ,PROD_STOCK_CNT
               ,PROD_YN
               ,PROD_MASS_YN
               ,PROD_NOTICE
               ,PROD_INDATE
               ,PROD_INUSER
               ,PROD_UPDATE
               ,PROD_UPUSER
          FROM MES_PRODUCT_INFO MPI
         WHERE PROD_YN = 'Y'
       <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(prod_kind)">
           AND PROD_KIND = #{prod_kind}
       </if>
       <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(prod_family)">
           AND PROD_FAMILY = #{prod_family}
       </if>
       <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(prod_group)">
           AND PROD_GROUP = #{prod_group}
       </if>
       <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(search_text)">
            AND
            (
                PROD_CD LIKE CONCAT('%', #{search_text}, '%')
                OR PROD_PN LIKE CONCAT('%', #{search_text}, '%')
                OR PROD_NM LIKE CONCAT('%', #{search_text}, '%')
                OR (SELECT BASE_DETAIL_NM FROM DFT_BASE_DETAIL WHERE BASE_DETAIL_CD = PROD_GROUP) LIKE CONCAT('%', #{search_text}, '%')
                OR (SELECT BASE_DETAIL_NM FROM DFT_BASE_DETAIL WHERE BASE_DETAIL_CD = PROD_FAMILY) LIKE CONCAT('%', #{search_text}, '%')
            )
        </if>
    </select>

    <select id="prodOne" parameterType="VMap" resultType="RowMap">
        SELECT FACT_CD
               ,PROD_CD
               ,PROD_PN
               ,PROD_NM
               ,PROD_KIND
               ,(SELECT CODE_NM
                 FROM DFT_CODE_INFO
                 WHERE CODE_ID = 'PROD_KIND'
                   AND CODE_CD = PROD_KIND
                ) PROD_KIND_NM
               ,PROD_GROUP
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_GROUP
                ) PROD_GROUP_NM
               ,PROD_FAMILY
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_FAMILY
                ) PROD_FAMILY_NM
               ,PROD_STAND
               ,PROD_UNIT
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_UNIT
                ) PROD_UNIT_NM
               ,PROD_PRICE
               ,PROD_MAIN_COMP
               ,(SELECT COMP_NM
                  FROM MES_COMPANY_INFO
                  WHERE COMP_CD = PROD_MAIN_COMP
                ) PROD_MAIN_COMP_NM
               ,PROD_KEEP_CNT
               ,PROD_STOCK_CNT
               ,PROD_YN
               ,PROD_MASS_YN
               ,PROD_NOTICE
               ,PROD_INDATE
               ,PROD_INUSER
               ,PROD_UPDATE
               ,PROD_UPUSER
          FROM MES_PRODUCT_INFO
         WHERE PROD_YN = 'Y'
           AND PROD_CD = #{prod_cd}
    </select>

    <select id="prodOverlap" parameterType="VMap" resultType="RowMap">
        SELECT FACT_CD
               ,PROD_CD
               ,PROD_PN
               ,PROD_NM
               ,PROD_KIND
               ,(SELECT CODE_NM
                 FROM DFT_CODE_INFO
                 WHERE CODE_ID = 'PROD_KIND'
                   AND CODE_CD = PROD_KIND
                ) PROD_KIND_NM
               ,PROD_GROUP
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_GROUP
                ) PROD_GROUP_NM
               ,PROD_FAMILY
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_FAMILY
                ) PROD_FAMILY_NM
               ,PROD_STAND
               ,PROD_UNIT
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_UNIT
                ) PROD_UNIT_NM
               ,PROD_PRICE
               ,PROD_MAIN_COMP
               ,(SELECT COMP_NM
                  FROM MES_COMPANY_INFO
                  WHERE COMP_CD = PROD_MAIN_COMP
                ) PROD_MAIN_COMP_NM
               ,PROD_KEEP_CNT
               ,PROD_STOCK_CNT
               ,PROD_YN
               ,PROD_MASS_YN
               ,PROD_NOTICE
               ,PROD_INDATE
               ,PROD_INUSER
               ,PROD_UPDATE
               ,PROD_UPUSER
          FROM MES_PRODUCT_INFO
         WHERE PROD_YN = 'Y'
        <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(prod_kind)">
            AND PROD_KIND = #{prod_kind}
        </if>
        <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(prod_group)">
            AND PROD_GROUP = #{prod_group}
        </if>
        <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(prod_family)">
            AND PROD_FAMILY = #{prod_family}
        </if>
        <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(prod_cd)">
            AND PROD_CD = #{prod_cd}
        </if>
    </select>

    <select id="prodOverlap2" parameterType="VMap" resultType="RowMap">
        SELECT FACT_CD
               ,PROD_CD
               ,PROD_PN
               ,PROD_NM
               ,PROD_KIND
               ,(SELECT CODE_NM
                 FROM DFT_CODE_INFO
                 WHERE CODE_ID = 'PROD_KIND'
                   AND CODE_CD = PROD_KIND
                ) PROD_KIND_NM
               ,PROD_GROUP
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_GROUP
                ) PROD_GROUP_NM
               ,PROD_FAMILY
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_FAMILY
                ) PROD_FAMILY_NM
               ,PROD_STAND
               ,PROD_UNIT
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_UNIT
                ) PROD_UNIT_NM
               ,PROD_PRICE
               ,PROD_MAIN_COMP
               ,(SELECT COMP_NM
                  FROM MES_COMPANY_INFO
                  WHERE COMP_CD = PROD_MAIN_COMP
                ) PROD_MAIN_COMP_NM
               ,PROD_KEEP_CNT
               ,PROD_STOCK_CNT
               ,PROD_YN
               ,PROD_MASS_YN
               ,PROD_NOTICE
               ,PROD_INDATE
               ,PROD_INUSER
               ,PROD_UPDATE
               ,PROD_UPUSER
          FROM MES_PRODUCT_INFO
         WHERE PROD_YN = 'Y'
        <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(prod_kind)">
            AND PROD_KIND = #{prod_kind}
        </if>
        <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(prod_group)">
            AND PROD_GROUP = #{prod_group}
        </if>
        <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(prod_family)">
            AND PROD_FAMILY = #{prod_family}
        </if>
        <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(prod_cd)">
            AND PROD_CD = #{prod_cd}
        </if>
        <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(selector)">
            AND
            (
                PROD_NM LIKE CONCAT('%', #{selector}, '%') OR
                PROD_PN LIKE CONCAT('%', #{selector}, '%') OR
                PROD_CD LIKE CONCAT('%', #{selector}, '%')
            )
        </if>
    </select>

    <select id="prodCompletOverlap" parameterType="VMap" resultType="RowMap">
        SELECT FACT_CD
               ,PROD_CD
               ,PROD_PN
               ,PROD_NM
               ,PROD_KIND
               ,(SELECT CODE_NM
                 FROM DFT_CODE_INFO
                 WHERE CODE_ID = 'PROD_KIND'
                   AND CODE_CD = PROD_KIND
                ) PROD_KIND_NM
               ,PROD_GROUP
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_GROUP
                ) PROD_GROUP_NM
               ,PROD_FAMILY
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_FAMILY
                ) PROD_FAMILY_NM
               ,PROD_STAND
               ,PROD_UNIT
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_UNIT
                ) PROD_UNIT_NM
               ,PROD_PRICE
               ,PROD_MAIN_COMP
               ,(SELECT COMP_NM
                  FROM MES_COMPANY_INFO
                  WHERE COMP_CD = PROD_MAIN_COMP
               ) PROD_MAIN_COMP_NM
               ,PROD_KEEP_CNT
               ,PROD_STOCK_CNT
               ,PROD_YN
               ,PROD_MASS_YN
               ,PROD_NOTICE
               ,PROD_INDATE
               ,PROD_INUSER
               ,PROD_UPDATE
               ,PROD_UPUSER
          FROM MES_PRODUCT_INFO
         WHERE PROD_YN = 'Y'
        <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(selector)">
            AND
            (
                PROD_NM LIKE CONCAT('%', #{selector}, '%')
            )
        </if>
    </select>

    <insert id="prodRegistModify" parameterType="VMap">
        INSERT INTO MES_PRODUCT_INFO
        (
            FACT_CD
            ,PROD_CD
            ,PROD_PN
            ,PROD_NM
            ,PROD_KIND
            ,PROD_GROUP
            ,PROD_FAMILY
            ,PROD_STAND
            ,PROD_UNIT
            ,PROD_PRICE
            ,PROD_MAIN_COMP
            ,PROD_KEEP_CNT
            ,PROD_STOCK_CNT
            ,PROD_YN
            ,PROD_MASS_YN
            ,PROD_NOTICE
            ,PROD_INDATE
            ,PROD_INUSER
            ,PROD_UPDATE
            ,PROD_UPUSER
        )VALUES
        (
            #{fact_cd}
            ,#{prod_cd}
            ,#{prod_pn}
            ,#{prod_nm}
            ,#{prod_kind}
            ,#{prod_group}
            ,#{prod_family}
            ,#{prod_stand}
            ,#{prod_unit}
            ,#{prod_price}
            ,#{prod_main_comp}
            ,#{prod_keep_cnt}
            ,0
            ,'Y'
            ,#{prod_mass_yn}
            ,#{prod_notice}
            ,NOW()
            ,IFNULL(#{u_cd}, 'system')
            ,NOW()
            ,IFNULL(#{u_cd}, 'system')
        )
        ON DUPLICATE KEY UPDATE
             PROD_PN = #{prod_pn}
            ,PROD_NM = #{prod_nm}
            ,PROD_KIND = #{prod_kind}
            ,PROD_GROUP = #{prod_group}
            ,PROD_FAMILY = #{prod_family}
            ,PROD_STAND = #{prod_stand}
            ,PROD_UNIT = #{prod_unit}
            ,PROD_PRICE = #{prod_price}
            ,PROD_MAIN_COMP = #{prod_main_comp}
            ,PROD_KEEP_CNT = #{prod_keep_cnt}
            ,PROD_MASS_YN = #{prod_mass_yn}
            ,PROD_NOTICE = #{prod_notice}
            ,PROD_UPDATE = NOW()
            ,PROD_UPUSER = IFNULL(#{u_cd}, 'system')
    </insert>

    <update id="prodPackDelete" parameterType="VMap">
        UPDATE MES_PRODUCT_INFO
        SET PROD_YN = 'Y'
        WHERE PROD_CD IN
        <foreach collection="deleteItems" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </update>

    <delete id="prodProcPackDelete" parameterType="VMap">
        DELETE FROM MES_PRODUCT_PROCESS
        WHERE PROD_CD IN
        <foreach collection="deleteItems" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="prodBomPackDelete" parameterType="VMap">
        DELETE FROM MES_PRODUCT_BOM
        WHERE PROD_CD IN
        <foreach collection="deleteItems" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <select id="prodProcList" parameterType="VMap" resultType="RowMap">
        SELECT FACT_CD
            ,PROD_PROC_CD
            ,PROD_PROC_SEQ
            ,PROD_CD
            ,PROC_CD
            ,PROD_PROC_MIN
            ,PROD_PROC_NOTICE
            ,PROD_PROC_INDATE
            ,PROD_PROC_INUSER
            ,PROD_PROC_UPDATE
            ,PROD_PROC_UPUSER
          FROM MES_PRODUCT_PROCESS
        <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(prod_cd)">
            WHERE PROD_CD = #{prod_cd}
        </if>
        ORDER BY PROD_PROC_SEQ ASC
    </select>

    <insert id="prodProcRegistModify" parameterType="VMap">
        INSERT INTO MES_PRODUCT_PROCESS
        (
            FACT_CD
            ,PROD_PROC_CD
            ,PROD_PROC_SEQ
            ,PROD_CD
            ,PROC_CD
            ,PROD_PROC_MIN
            ,PROD_PROC_NOTICE
            ,PROD_PROC_INDATE
            ,PROD_PROC_INUSER
            ,PROD_PROC_UPDATE
            ,PROD_PROC_UPUSER
        )VALUES
        (
            #{fact_cd}
            ,#{prod_proc_cd}
            ,#{prod_proc_seq}
            ,#{prod_cd}
            ,#{proc_cd}
            ,#{prod_proc_min}
            ,#{prod_proc_notice}
            ,NOW()
            ,IFNULL(#{u_cd}, 'system')
            ,NOW()
            ,IFNULL(#{u_cd}, 'system')
        )
        ON DUPLICATE KEY UPDATE
             PROC_CD = #{proc_cd}
            ,PROD_PROC_SEQ = #{prod_proc_seq}
            ,PROD_PROC_MIN = #{prod_proc_min}
            ,PROD_PROC_NOTICE = #{prod_proc_notice}
            ,PROD_PROC_UPDATE = NOW()
            ,PROD_PROC_UPUSER = IFNULL(#{u_cd}, 'system')
    </insert>

     <delete id="prodProcDelete" parameterType="VMap">
        DELETE FROM MES_PRODUCT_PROCESS
        WHERE PROD_PROC_CD = #{prod_proc_cd}
    </delete>

    <select id="prodBomList" parameterType="VMap" resultType="RowMap">
        SELECT MPB.FACT_CD
               ,PROD_BOM_CD
               ,PROD_CD
               ,PROD_PN
               ,PROD_NM
               ,PROD_KIND
               ,(SELECT CODE_NM
                 FROM DFT_CODE_INFO
                 WHERE CODE_ID = 'PROD_KIND'
                   AND CODE_CD = PROD_KIND
                ) PROD_KIND_NM
               ,PROD_GROUP
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_GROUP
                ) PROD_GROUP_NM
               ,PROD_FAMILY
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_FAMILY
                ) PROD_FAMILY_NM
               ,PROD_STAND
               ,PROD_UNIT
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_UNIT
                ) PROD_UNIT_NM
               ,PROD_PRICE
               ,PROD_MAIN_COMP
               ,(SELECT COMP_NM
                  FROM MES_COMPANY_INFO
                  WHERE COMP_CD = PROD_MAIN_COMP
                ) PROD_MAIN_COMP_NM
               ,PROD_KEEP_CNT
               ,PROD_STOCK_CNT
               ,PROC_CD
               ,PROD_JA_CD
               ,MATE_NM PROD_JA_NM
               ,MATE_PN PROD_JA_PN
               ,MATE_KIND PROD_JA_KIND
              ,(SELECT CODE_NM
                 FROM DFT_CODE_INFO
                 WHERE CODE_ID = 'MATE_KIND'
                   AND CODE_CD = MATE_KIND
                ) PROD_JA_KIND_NM
               ,MATE_GROUP PROD_JA_GROUP
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = MATE_GROUP
                ) PROD_JA_GROUP_NM
               ,MATE_STAND PROD_JA_STAND
               ,MATE_UNIT PROD_JA_UNIT
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = MATE_UNIT
                ) PROD_JA_UNIT_NM
               ,MATE_PRICE PROD_JA_PRICE
               ,PROD_BOM_CNT
               ,PROD_BOM_NOTICE
               ,PROD_BOM_INDATE
               ,PROD_BOM_INUSER
               ,PROD_BOM_UPDATE
               ,PROD_BOM_UPUSER
        FROM MES_PRODUCT_BOM MPB
        JOIN MES_PRODUCT_INFO MPI USING (FACT_CD, PROD_CD)
        JOIN MES_MATERIAL_INFO MMI ON MPB.FACT_CD = MMI.FACT_CD AND MPB.PROD_JA_CD = MMI.MATE_CD
        <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(prod_cd)">
            WHERE PROD_CD = #{prod_cd}
        </if>
        <if test="@com.ysis.webapp.common.util.MybatisUtils@isNotEmpty(proc_cd)">
            WHERE PROC_CD = #{proc_cd}
        </if>
        ORDER BY MATE_KIND, PROD_BOM_CNT DESC
    </select>

    <insert id="prodBomRegistModify" parameterType="VMap">
        INSERT INTO MES_PRODUCT_BOM
        (
            FACT_CD
           ,PROD_BOM_CD
           ,PROD_CD
           ,PROC_CD
           ,PROD_JA_CD
           ,PROD_BOM_CNT
           ,PROD_BOM_NOTICE
           ,PROD_BOM_INDATE
           ,PROD_BOM_INUSER
           ,PROD_BOM_UPDATE
           ,PROD_BOM_UPUSER
        )VALUES
        (
            #{fact_cd}
            ,#{prod_bom_cd}
            ,#{prod_cd}
            ,#{proc_cd}
            ,#{prod_ja_cd}
            ,#{prod_bom_cnt}
            ,#{prod_bom_notice}
            ,NOW()
            ,IFNULL(#{u_cd}, 'system')
            ,NOW()
            ,IFNULL(#{u_cd}, 'system')
        )
        ON DUPLICATE KEY UPDATE
             PROC_CD = #{proc_cd}
            ,PROD_JA_CD = #{prod_ja_cd}
            ,PROD_BOM_CNT = #{prod_bom_cnt}
            ,PROD_BOM_NOTICE = #{prod_bom_notice}
            ,PROD_BOM_UPDATE = NOW()
            ,PROD_BOM_UPUSER = IFNULL(#{u_cd}, 'system')
    </insert>

     <delete id="prodBomDelete" parameterType="VMap">
        DELETE FROM MES_PRODUCT_BOM
        WHERE PROD_BOM_CD = #{prod_bom_cd}
    </delete>

    <update id="prodStockCntModify" parameterType="VMap">
        UPDATE MES_PRODUCT_INFO
        SET
        <choose>
            <when test='inout_type == "I"'>
                PROD_STOCK_CNT = PROD_STOCK_CNT + IFNULL(#{prod_stock_cnt}, 0)
            </when>
            <when test='inout_type == "O"'>
                PROD_STOCK_CNT = PROD_STOCK_CNT - IFNULL(#{prod_stock_cnt}, 0)
            </when>
        </choose>
        WHERE PROD_CD = #{prod_cd}
    </update>

</mapper>
