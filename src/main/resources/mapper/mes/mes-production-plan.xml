<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mes.production.plan">

    <select id="planList" parameterType="VMap" resultType="RowMap">
        SELECT FACT_CD
               ,ODR_CD
               ,COMP_CD
               ,COMP_NM
               ,PLAN_CD
               ,PLAN_NO
               ,PROD_CD
               ,PROD_PN
               ,PROD_NM
               ,PROD_KIND
               ,(SELECT CODE_NM
                 FROM DFT_CODE_INFO
                 WHERE CODE_ID = 'PROD_KIND'
                   AND CODE_CD = PROD_KIND
                ) PROD_KIND_NM
               ,PROD_GROUP
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_GROUP
                ) PROD_GROUP_NM
               ,PROD_FAMILY
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_FAMILY
                ) PROD_FAMILY_NM
               ,PROD_STAND
               ,PROD_UNIT
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_UNIT
                ) PROD_UNIT_NM
               ,PROD_PRICE
               ,PROD_MAIN_COMP
               ,(SELECT COMP_NM
                  FROM MES_COMPANY_INFO
                  WHERE COMP_CD = PROD_MAIN_COMP
                ) PROD_MAIN_COMP_NM
               ,PROD_KEEP_CNT
               ,PROD_STOCK_CNT
               ,PROD_MASS_YN
               ,PLAN_STDT
               ,PLAN_EDDT
               ,PLAN_CNT
               ,PLAN_STATE
               ,(SELECT CODE_NM
                   FROM DFT_CODE_INFO
                  WHERE CODE_ID = 'MES_STATE'
                    AND CODE_CD = PLAN_STATE
                ) PLAN_STATE_NM
                ,IF( (SELECT COUNT(*) FROM MES_PRODUCTION_PLAN_PROCESS WHERE PLAN_CD = MOI.PLAN_CD)
                    = (SELECT COUNT(*) FROM MES_PRODUCTION_PLAN_PROCESS WHERE PLAN_CD = MOI.PLAN_CD AND PLAN_PROC_STATE = '12'), 'Y', 'N') AS PLAN_COMP_YN
               ,PLAN_NOTICE
               ,PLAN_INDATE
               ,PLAN_INUSER
               ,PLAN_UPDATE
               ,PLAN_UPUSER
        FROM MES_PRODUCTION_PLAN MOI
        JOIN MES_COMPANY_INFO USING (FACT_CD, COMP_CD)
        JOIN MES_PRODUCT_INFO USING (FACT_CD, PROD_CD)
       WHERE DATE_FORMAT(PLAN_STDT, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
         AND DATE_FORMAT(PLAN_EDDT, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
       <if test="@com.ksr.webapp.common.util.MybatisUtils@isNotEmpty(prod_kind)">
           AND PROD_KIND = #{prod_kind}
       </if>
       <if test="@com.ksr.webapp.common.util.MybatisUtils@isNotEmpty(prod_family)">
           AND PROD_FAMILY = #{prod_family}
       </if>
       <if test="@com.ksr.webapp.common.util.MybatisUtils@isNotEmpty(prod_group)">
           AND PROD_GROUP = #{prod_group}
       </if>
       <if test="@com.ksr.webapp.common.util.MybatisUtils@isNotEmpty(search_text)">
            AND
            (
                PROD_CD LIKE CONCAT('%', #{search_text}, '%')
                OR PROD_PN LIKE CONCAT('%', #{search_text}, '%')
                OR PROD_NM LIKE CONCAT('%', #{search_text}, '%')
                OR COMP_NM LIKE CONCAT('%', #{search_text}, '%')
                OR ODR_CD LIKE CONCAT('%', #{search_text}, '%')
                OR PROD_NO LIKE CONCAT('%', #{search_text}, '%')
                OR (SELECT BASE_DETAIL_NM FROM DFT_BASE_DETAIL WHERE BASE_DETAIL_CD = PROD_GROUP) LIKE CONCAT('%', #{search_text}, '%')
                OR (SELECT BASE_DETAIL_NM FROM DFT_BASE_DETAIL WHERE BASE_DETAIL_CD = PROD_FAMILY) LIKE CONCAT('%', #{search_text}, '%')
            )
        </if>
        ORDER BY PLAN_STATE ASC, PLAN_CD DESC
    </select>

    <select id="planOne" parameterType="VMap" resultType="RowMap">
        SELECT FACT_CD
               ,ODR_CD
               ,COMP_CD
               ,COMP_NM
               ,PLAN_CD
               ,PLAN_NO
               ,PROD_CD
               ,PROD_PN
               ,PROD_NM
               ,PROD_KIND
               ,(SELECT CODE_NM
                 FROM DFT_CODE_INFO
                 WHERE CODE_ID = 'PROD_KIND'
                   AND CODE_CD = PROD_KIND
                ) PROD_KIND_NM
               ,PROD_GROUP
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_GROUP
                ) PROD_GROUP_NM
               ,PROD_FAMILY
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_FAMILY
                ) PROD_FAMILY_NM
               ,PROD_STAND
               ,PROD_UNIT
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_UNIT
                ) PROD_UNIT_NM
               ,PROD_PRICE
               ,PROD_MAIN_COMP
               ,(SELECT COMP_NM
                  FROM MES_COMPANY_INFO
                  WHERE COMP_CD = PROD_MAIN_COMP
                ) PROD_MAIN_COMP_NM
               ,PROD_KEEP_CNT
               ,PROD_STOCK_CNT
               ,PROD_MASS_YN
               ,PLAN_STDT
               ,PLAN_EDDT
               ,PLAN_CNT
               ,PLAN_STATE
               ,(SELECT CODE_NM
                   FROM DFT_CODE_INFO
                  WHERE CODE_ID = 'MES_STATE'
                    AND CODE_CD = PLAN_STATE
                ) PLAN_STATE_NM
               ,IF( (SELECT COUNT(*) FROM MES_PRODUCTION_PLAN_PROCESS WHERE PLAN_CD = MOI.PLAN_CD)
                        = (SELECT COUNT(*) FROM MES_PRODUCTION_PLAN_PROCESS WHERE PLAN_CD = MOI.PLAN_CD AND PLAN_PROC_STATE = '12'), 'Y', 'N') AS PLAN_COMP_YN
               ,PLAN_NOTICE
               ,PLAN_INDATE
               ,PLAN_INUSER
               ,PLAN_UPDATE
               ,PLAN_UPUSER
        FROM MES_PRODUCTION_PLAN MOI
        JOIN MES_COMPANY_INFO USING (FACT_CD, COMP_CD)
        JOIN MES_PRODUCT_INFO USING (FACT_CD, PROD_CD)
       WHERE PLAN_CD = #{plan_cd}
    </select>

    <select id="prodOverlap" parameterType="VMap" resultType="RowMap">
        SELECT FACT_CD
               ,PROD_CD
               ,PROD_PN
               ,PROD_NM
               ,PROD_KIND
               ,(SELECT CODE_NM
                 FROM DFT_CODE_INFO
                 WHERE CODE_ID = 'PROD_KIND'
                   AND CODE_CD = PROD_KIND
                ) PROD_KIND_NM
               ,PROD_GROUP
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_GROUP
                ) PROD_GROUP_NM
               ,PROD_FAMILY
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_FAMILY
                ) PROD_FAMILY_NM
               ,PROD_STAND
               ,PROD_UNIT
               ,(SELECT BASE_DETAIL_NM
                 FROM DFT_BASE_DETAIL
                 WHERE BASE_DETAIL_CD = PROD_UNIT
                ) PROD_UNIT_NM
               ,PROD_PRICE
               ,PROD_MAIN_COMP
               ,(SELECT COMP_NM
                  FROM MES_COMPANY_INFO
                  WHERE COMP_CD = PROD_MAIN_COMP
                ) PROD_MAIN_COMP_NM
               ,PROD_KEEP_CNT
               ,PROD_STOCK_CNT
               ,PROD_YN
               ,PROD_MASS_YN
               ,PROD_NOTICE
               ,PROD_INDATE
               ,PROD_INUSER
               ,PROD_UPDATE
               ,PROD_UPUSER
          FROM MES_PRODUCT_INFO
         WHERE PROD_YN = 'Y'
        <if test="@com.ksr.webapp.common.util.MybatisUtils@isNotEmpty(prod_kind)">
            AND PROD_KIND = #{prod_kind}
        </if>
        <if test="@com.ksr.webapp.common.util.MybatisUtils@isNotEmpty(prod_group)">
            AND PROD_GROUP = #{prod_group}
        </if>
        <if test="@com.ksr.webapp.common.util.MybatisUtils@isNotEmpty(prod_family)">
            AND PROD_FAMILY = #{prod_family}
        </if>
        <if test="@com.ksr.webapp.common.util.MybatisUtils@isNotEmpty(prod_cd)">
            AND PROD_CD = #{prod_cd}
        </if>
    </select>

    <insert id="planRegist" parameterType="VMap">
        INSERT INTO MES_PRODUCTION_PLAN
        (
             FACT_CD
             ,ODR_CD
             ,PLAN_CD
             ,PLAN_NO
             ,COMP_CD
             ,PROD_CD
             ,PLAN_STDT
             ,PLAN_EDDT
             ,PLAN_CNT
             ,PLAN_NOTICE
             ,PLAN_INDATE
             ,PLAN_INUSER
             ,PLAN_UPDATE
             ,PLAN_UPUSER
        )VALUES (
             #{fact_cd}
             ,#{odr_cd}
             ,#{plan_cd}
             ,#{plan_no}
             ,#{comp_cd}
             ,#{prod_cd}
             ,#{plan_stdt}
             ,#{plan_eddt}
             ,#{plan_cnt}
             ,#{plan_notice}
             ,NOW()
             ,IFNULL(#{u_cd}, 'system')
             ,NOW()
             ,IFNULL(#{u_cd}, 'system')
        )
    </insert>

    <update id="planModify" parameterType="VMap">
        UPDATE MES_PRODUCTION_PLAN
        SET COMP_CD = #{comp_cd}
          ,PROD_CD = #{prod_cd}
          ,PLAN_NO = #{plan_no}
          ,PLAN_STDT = #{plan_stdt}
          ,PLAN_EDDT = #{plan_eddt}
          ,PLAN_CNT = #{plan_cnt}
          ,PLAN_NOTICE = #{plan_notice}
          ,PLAN_UPDATE = NOW()
          ,PLAN_UPUSER = IFNULL(#{u_cd}, 'system')
        WHERE PLAN_CD = #{plan_cd}
    </update>

    <update id="planPackDelete" parameterType="VMap">
        DELETE FROM MES_PRODUCTION_PLAN
        <if test="@com.ksr.webapp.common.util.MybatisUtils@isNotEmpty(deleteItems)">
            WHERE PLAN_CD IN
            <foreach collection="deleteItems" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>

        <if test="@com.ksr.webapp.common.util.MybatisUtils@isNotEmpty(oderDeleteItems)">
            WHERE ODR_CD IN
            <foreach collection="oderDeleteItems" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>

    </update>

    <select id="planProcList" parameterType="VMap" resultType="RowMap">
        SELECT FACT_CD
             ,PLAN_CD
             ,PLAN_PROC_CD
             ,PROC_CD
             ,PROC_NM
             ,PLAN_PROC_SEQ
             ,PLAN_PROC_LAST_YN
             ,PLAN_PROC_CNT
             ,PLAN_PROC_STATE
             ,(SELECT CODE_NM
               FROM DFT_CODE_INFO
               WHERE CODE_ID = 'MES_STATE'
                 AND CODE_CD = PLAN_PROC_STATE
        ) PLAN_PROC_STATE_NM
             ,PLAN_PROC_NOTICE
             ,PLAN_PROC_INDATE
             ,PLAN_PROC_INUSER
             ,PLAN_PROC_UPDATE
             ,PLAN_PROC_UPUSER
        FROM MES_PRODUCTION_PLAN_PROCESS
                 JOIN MES_PROCESS_INFO USING (FACT_CD, PROC_CD)
        WHERE PLAN_CD = #{plan_cd}
        ORDER BY PLAN_PROC_SEQ ASC
    </select>

    <insert id="planProcRegist" parameterType="VMap">
        INSERT INTO MES_PRODUCTION_PLAN_PROCESS
        (
             FACT_CD
             ,PLAN_CD
             ,PLAN_PROC_CD
             ,PROC_CD
             ,PLAN_PROC_SEQ
             ,PLAN_PROC_LAST_YN
             ,PLAN_PROC_INDATE
             ,PLAN_PROC_INUSER
             ,PLAN_PROC_UPDATE
             ,PLAN_PROC_UPUSER
        ) VALUES (
              #{fact_cd}
             ,#{plan_cd}
             ,#{plan_proc_cd}
             ,#{proc_cd}
             ,#{plan_proc_seq}
             ,#{plan_proc_last_yn}
             ,NOW()
             ,IFNULL(#{u_cd}, 'system')
             ,NOW()
             ,IFNULL(#{u_cd}, 'system')
        )
    </insert>

    <update id="planProcModify" parameterType="VMap">
        UPDATE MES_PRODUCTION_PLAN_PROCESS
        SET PLAN_PROC_CNT = IFNULL(#{plan_proc_cnt}, PLAN_PROC_CNT)
          ,PLAN_PROC_STATE = IFNULL(#{plan_proc_state}, PLAN_PROC_STATE)
          ,PLAN_PROC_NOTICE = #{plan_proc_notice}
          ,PLAN_PROC_UPDATE = NOW()
          ,PLAN_PROC_UPUSER = IFNULL(#{u_cd}, 'system')
        WHERE PLAN_PROC_CD = #{plan_proc_cd}
    </update>

    <delete id="planProcDelete" parameterType="VMap">
        DELETE FROM MES_PRODUCTION_PLAN_PROCESS
        <if test="@com.ksr.webapp.common.util.MybatisUtils@isNotEmpty(plan_proc_cd)">
            WHERE PLAN_PROC_CD = #{plan_proc_cd}
        </if>
        <if test="@com.ksr.webapp.common.util.MybatisUtils@isNotEmpty(deleteItems)">
            WHERE PLAN_CD IN
            <foreach collection="deleteItems" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
    </delete>

    <delete id="orderPlanProcDelete" parameterType="VMap">
        DELETE FROM MES_PRODUCTION_PLAN_PROCESS
        WHERE PLAN_CD IN (SELECT PLAN_CD
                            FROM MES_PRODUCTION_PLAN
                            WHERE ODR_CD IN
                            <foreach collection="oderDeleteItems" item="item" separator="," open="(" close=")">
                                #{item}
                            </foreach>
                          )
    </delete>

    <update id="planStateModify" parameterType="VMap">
        UPDATE MES_PRODUCTION_PLAN
        SET PLAN_STATE = #{plan_state}
        WHERE PLAN_CD = #{plan_cd}
    </update>

    <update id="planProcessStateModify" parameterType="VMap">
        UPDATE MES_PRODUCTION_PLAN_PROCESS
        SET PLAN_PROC_STATE = #{plan_proc_state}
        WHERE PLAN_CD = #{plan_cd}
        AND PLAN_PROC_CD = #{plan_proc_cd}
    </update>


</mapper>
